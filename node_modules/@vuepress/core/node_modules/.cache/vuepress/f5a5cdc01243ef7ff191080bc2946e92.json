{"remainingRequest":"/Users/mac/WebstormProjects/sddz/eddievandeer.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mac/WebstormProjects/sddz/eddievandeer.github.io/node_modules/vuepress-theme-vivek/components/blogArticles.vue?vue&type=style&index=0&id=5ab14285&lang=scss&scoped=true&","dependencies":[{"path":"/Users/mac/WebstormProjects/sddz/eddievandeer.github.io/node_modules/vuepress-theme-vivek/components/blogArticles.vue","mtime":1684719585858},{"path":"/Users/mac/WebstormProjects/sddz/eddievandeer.github.io/node_modules/css-loader/dist/cjs.js","mtime":1639398513879},{"path":"/Users/mac/WebstormProjects/sddz/eddievandeer.github.io/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1670320619439},{"path":"/Users/mac/WebstormProjects/sddz/eddievandeer.github.io/node_modules/postcss-loader/src/index.js","mtime":1638501541696},{"path":"/Users/mac/WebstormProjects/sddz/eddievandeer.github.io/node_modules/sass-loader/dist/cjs.js","mtime":1681796549197},{"path":"/Users/mac/WebstormProjects/sddz/eddievandeer.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1663819326638},{"path":"/Users/mac/WebstormProjects/sddz/eddievandeer.github.io/node_modules/vue-loader/lib/index.js","mtime":1670320619439}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgJy4uL3N0eWxlcy9kZXRhaWwuc2Nzcyc7Cg=="},{"version":3,"sources":["blogArticles.vue"],"names":[],"mappings":";AAuFA","file":"blogArticles.vue","sourceRoot":"node_modules/vuepress-theme-vivek/components","sourcesContent":["<template>\r\n    <div class=\"article-list\">\r\n        <div class=\"article-item\" v-for=\"(page, index) in pages\" :key=\"index\">\r\n            <div class=\"detail\">\r\n                <a :href=\"page.regularPath\" @click.prevent=\"$router.push(page.regularPath)\">\r\n                    <h1>{{page.title}}</h1>\r\n                </a>\r\n                <div class=\"post-meta\">\r\n                    <div class=\"post-time\">\r\n                        <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\r\n                        <time>{{page.frontmatter.postTime.substr(0, 10)}}</time>\r\n                    </div>\r\n                </div>\r\n                <!-- <div class=\"detail-item\" v-for=\"(item, index2) in getPageItems(page)\"\r\n                                :key=\"index2\">\r\n                                <span>{{ item }}</span>\r\n                            </div> -->\r\n                <Content :pageKey=\"page.key\" slot-key=\"abstract\" />\r\n            </div>\r\n            <article-footer :page=\"page\"></article-footer>\r\n        </div>\r\n        <page-controller :pageSize=\"pageSize\" :total=\"total\" :current-page=\"pageNumber\"\r\n            @page-change=\"handlePageChange($event)\"></page-controller>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: 'blogArticles',\r\n        props: ['filted', 'pageNumber', 'path'],\r\n        data() {\r\n            return {\r\n                pages: [],\r\n                pageSize: 8,\r\n                total: 0,\r\n                start: 0,\r\n                end: 0\r\n            }\r\n        },\r\n        methods: {\r\n            setPage(pageNumber = 1) {\r\n                this.total = this.filted.length\r\n\r\n                this.setRange(pageNumber)\r\n            },\r\n            setRange(pageNumber) {\r\n                this.start = (pageNumber - 1) * this.pageSize\r\n                this.end = pageNumber * this.pageSize\r\n\r\n                if (this.end > this.total) this.end = this.total\r\n\r\n                this.pages.length = 0\r\n\r\n                for (let i = this.start; i < this.end; i++) {\r\n                    if (this.filted[i] == undefined) break\r\n                    this.pages.push(this.filted[i])\r\n                }\r\n\r\n                if(this.pages.length === 0) {\r\n                    this.$router.push('/404')\r\n                }\r\n            },\r\n            handlePageChange({\r\n                pageNumber\r\n            }) {\r\n                this.$router.push({\r\n                    path: !this.path ? \r\n                        `/${window.location.pathname.split('/')[1]}/page/${pageNumber}` :\r\n                        `/${this.path}/${pageNumber}`\r\n                })\r\n                this.setPage(pageNumber)\r\n            }\r\n        },\r\n        mounted() {\r\n            this.setPage(this.pageNumber ? this.pageNumber : 1)\r\n        },\r\n        watch: {\r\n            $route(to, from) {\r\n                this.setPage(this.pageNumber ? this.pageNumber : 1)\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    @import '../styles/detail.scss';\r\n</style>"]}]}