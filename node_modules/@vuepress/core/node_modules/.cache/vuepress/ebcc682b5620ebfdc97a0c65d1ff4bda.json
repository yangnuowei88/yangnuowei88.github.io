{"remainingRequest":"/Users/mac/WebstormProjects/sddz/eddievandeer.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mac/WebstormProjects/sddz/eddievandeer.github.io/node_modules/vuepress-theme-vivek/components/Tag.vue?vue&type=style&index=0&id=1cf175e4&lang=scss&scoped=true&","dependencies":[{"path":"/Users/mac/WebstormProjects/sddz/eddievandeer.github.io/node_modules/vuepress-theme-vivek/components/Tag.vue","mtime":1684719585858},{"path":"/Users/mac/WebstormProjects/sddz/eddievandeer.github.io/node_modules/css-loader/dist/cjs.js","mtime":1639398513879},{"path":"/Users/mac/WebstormProjects/sddz/eddievandeer.github.io/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1670320619439},{"path":"/Users/mac/WebstormProjects/sddz/eddievandeer.github.io/node_modules/postcss-loader/src/index.js","mtime":1638501541696},{"path":"/Users/mac/WebstormProjects/sddz/eddievandeer.github.io/node_modules/sass-loader/dist/cjs.js","mtime":1681796549197},{"path":"/Users/mac/WebstormProjects/sddz/eddievandeer.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1663819326638},{"path":"/Users/mac/WebstormProjects/sddz/eddievandeer.github.io/node_modules/vue-loader/lib/index.js","mtime":1670320619439}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgJy4uL3N0eWxlcy92YWx1ZXMuc2Nzcyc7CgoudGFnLWNvbnRhaW5lciB7CiAgICBAZXh0ZW5kIC5mbGV4LWNvbHVtbjsKICAgIGJhY2tncm91bmQtY29sb3I6ICRwcmltYXJ5LWJhY2tncm91bmQ7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CgogICAgLmJsb2ctdGFnIHsKICAgICAgICBtaW4td2lkdGg6IDMwJTsKICAgICAgICBmbGV4OiAxOwogICAgICAgIEBleHRlbmQgLmZsZXgtY29sdW1uOwogICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKCiAgICAgICAgLnRhZy10aWxlIHsKICAgICAgICAgICAgd2lkdGg6IGZpdC1jb250ZW50OwoKICAgICAgICAgICAgaSB7CiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IC42cmVtOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["Tag.vue"],"names":[],"mappings":";AAuGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Tag.vue","sourceRoot":"node_modules/vuepress-theme-vivek/components","sourcesContent":["<template>\r\n    <div class=\"tag-container\">\r\n        <div class=\"blog-tag\">\r\n            <div class=\"tag-tile\">\r\n                <h1><i class=\"fa fa-tag\" aria-hidden=\"true\"></i>{{tag}}</h1>\r\n            </div>\r\n            <Archive :pages=\"pages\"></Archive>\r\n            <page-controller :pageSize=\"pageSize\" :total=\"total\" :current-page=\"pageNumber\"\r\n                @page-change=\"handlePageChange($event)\">\r\n            </page-controller>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import blogArticles from './blogArticles'\r\n    import Archive from './Archive'\r\n\r\n    export default {\r\n        components: {\r\n            blogArticles,\r\n            Archive\r\n        },\r\n        props: [\r\n            'tag',\r\n            'pageNumber'\r\n        ],\r\n        data() {\r\n            return {\r\n                pages: new Map(),\r\n                pageSize: 6,\r\n                total: 0\r\n            }\r\n        },\r\n        methods: {\r\n            setPage(pageNumber) {\r\n                let start = (pageNumber - 1) * this.pageSize\r\n                let end = pageNumber * this.pageSize\r\n\r\n                const filted = this.$tags.get(this.tag).pages\r\n\r\n                this.total = filted.length\r\n\r\n                this.pages.clear()\r\n\r\n                for (let i = start; i < end; i++) {\r\n                    if (filted[i] == undefined) break\r\n                    const postYear = filted[i].frontmatter.postTime.slice(0, 4)\r\n\r\n                    if (this.pages.has(postYear)) {\r\n                        this.pages.get(postYear).push(filted[i])\r\n                    } else {\r\n                        this.pages.set(postYear, [filted[i]])\r\n                    }\r\n                }\r\n            },\r\n            handlePageChange({\r\n                pageNumber\r\n            }) {\r\n                this.setPage(pageNumber)\r\n                this.$router.push({\r\n                    path: `/tags/${this.tag}/page/${pageNumber}`\r\n                })\r\n            }\r\n        },\r\n        beforeMount() {\r\n            this.setPage(this.pageNumber ? this.pageNumber : 1)\r\n            document.title = this.tag\r\n        },\r\n        watch: {\r\n            $route(to, from) {\r\n                if (to.path !== from.path) {\r\n                    this.setPage(this.pageNumber)\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    @import '../styles/values.scss';\r\n\r\n    .tag-container {\r\n        @extend .flex-column;\r\n        background-color: $primary-background;\r\n        justify-content: space-between;\r\n\r\n        .blog-tag {\r\n            min-width: 30%;\r\n            flex: 1;\r\n            @extend .flex-column;\r\n            justify-content: space-between;\r\n\r\n            .tag-tile {\r\n                width: fit-content;\r\n\r\n                i {\r\n                    margin-right: .6rem;\r\n                }\r\n            }\r\n        }\r\n    }\r\n</style>"]}]}